{
  "version": 3,
  "file": "takinosaji-ngtooltip.umd.min.js",
  "sources": [
    "ng://@takinosaji/ngtooltip/out/NgTooltipDirective.ts",
    "ng://@takinosaji/ngtooltip/out/NgTooltipModule.ts"
  ],
  "sourcesContent": [
    "import { Directive, ElementRef, OnDestroy, Input, AfterViewInit } from \"@angular/core\";\r\nimport { Tooltip } from \"tooltip.js\";\r\n\r\n@Directive({\r\n    selector: \"[ngTooltip]\"\r\n})\r\nexport class NgTooltipDirective implements AfterViewInit, OnDestroy {\r\n    private _tooltip: any;\r\n\r\n    @Input() tooltipContent: string;\r\n    @Input() tooltipHtml: boolean;\r\n    @Input() tooltipTemplate: string;\r\n    @Input() tooltipContainer = \"body\";\r\n\r\n    constructor(private _el: ElementRef) {\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        const tooltipOptions: any = this.GetTooltipOptions();\r\n        this._tooltip = new Tooltip(this._el.nativeElement, tooltipOptions);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._tooltip.dispose();\r\n        this._tooltip = null;\r\n    }\r\n\r\n    private GetTooltipOptions = (): any => {\r\n        let options: any = {\r\n            title: this.tooltipContent,\r\n            html: this.tooltipHtml,\r\n            container: this.tooltipContainer\r\n        };\r\n\r\n        if(!!this.tooltipTemplate) {\r\n            options.template = this.tooltipTemplate;\r\n        }\r\n\r\n        return options;\r\n    }\r\n}\r\n",
    "import { NgTooltipDirective } from \"./NgTooltipDirective\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [NgTooltipDirective],\r\n    declarations: [NgTooltipDirective],\r\n  })\r\n  export class NgTooltipModule { }"
  ],
  "names": [
    "_this",
    "this",
    "_el",
    "tooltipContainer",
    "GetTooltipOptions",
    "options",
    "title",
    "tooltipContent",
    "html",
    "tooltipHtml",
    "container",
    "tooltipTemplate",
    "template",
    "NgTooltipDirective",
    "prototype",
    "ngAfterViewInit",
    "tooltipOptions",
    "_tooltip",
    "Tooltip",
    "nativeElement",
    "ngOnDestroy",
    "dispose",
    "decorators",
    "type",
    "Directive",
    "args",
    "selector",
    "ctorParameters",
    "propDecorators",
    "Input",
    "NgTooltipModule",
    "NgModule",
    "imports"
  ],
  "mappings": "6WAcA,IAAAA,EAAAC,KAAwBA,KAAxBC,IAAwBA,EAFxBD,KAAAE,iBAAgC,OAehCF,KAAAG,kBAAgC,WACxB,IAAIC,EAAe,CACfC,MAAON,EAAnBO,eACYC,KAAMR,EAAlBS,YACYC,UAAWV,EAAvBG,kBAOQ,OAJKH,EAAbW,kBACYN,EAAQO,SAAWZ,EAA/BW,iBAGeN,UArBXQ,EAAJC,UAAAC,gBAAA,WACQ,IAARC,EAAAf,KAAAG,oBACQH,KAAKgB,SAAW,IAAIC,EAAAA,QAAQjB,KAAKC,IAAIiB,cAAeH,IAGxDH,EAAJC,UAAAM,YAAA,WACQnB,KAAKgB,SAASI,UACdpB,KAAKgB,SAAW,WArBxBJ,EAAAS,WAAA,CACA,CAAAC,KAAAC,EAAAA,UAAAC,KAAA,CAAA,CACAC,SAAA,kBALAb,EAAAc,eAAA,WAAA,MAAA,uBASAd,EAAAe,eAAU,CACVrB,eAAA,CAAA,CAAAgB,KAAAM,EAAAA,QACApB,YAAA,CAAA,CAAAc,KAAAM,EAAAA,QACAlB,gBAAA,CAAA,CAAAY,KAAAM,EAAAA,2CCZA,IAAAC,eAKAA,EAAIR,WAAJ,CACA,CAAAC,KAAAQ,EAAAA,SAAAN,KAAgB,CAAhB,CACAO,QAAA"
}
